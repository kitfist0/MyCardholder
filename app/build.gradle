plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

import com.android.build.gradle.internal.tasks.FinalizeBundleTask

android {
    compileSdk 34

    namespace 'my.cardholder'

    defaultConfig {
        applicationId "my.cardholder"
        applicationIdSuffix ".gp"
        minSdk 24
        targetSdk 33
        versionCode 5
        versionName "v1.0.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "APP_NAME", "\"MyCardholder\"")
        buildConfigField("String", "DEV_NAME", "\"MidnightDev\"")
        buildConfigField("String", "WEB_PAGE_LICENSE", "\"https://github.com/kitfist0/MyCardholder/blob/master/LICENSE\"")
        buildConfigField("String", "WEB_PAGE_POLICY", "\"https://github.com/kitfist0/MyCardholder/blob/master/POLICY.md\"")
        buildConfigField("String", "WEB_PAGE_GITHUB", "\"https://github.com/kitfist0/MyCardholder\"")
    }

    flavorDimensions = ["billing"]

    productFlavors {
        googleplay {
            dimension "billing"
        }
        rustore {
            dimension "billing"
        }
    }

    signingConfigs {
        debug {
            storeFile = rootProject.file('cert/debug.keystore')
            storePassword = 'android'
            keyAlias = 'cardholder'
            keyPassword = 'android'
        }
        release {
            storeFile = rootProject.file('cert/release.keystore')
            def propsFile = rootProject.file('cert/release.properties')
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            storePassword = props['store_password']
            keyAlias = props['alias']
            keyPassword = props['key_password']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        viewBinding true
    }

    // Rename APKs and AABs
    applicationVariants.configureEach { variant ->
        def artifactName = "${applicationId}-${variant.versionCode}-${variant.buildType.name}"
        variant.outputs.configureEach {
            outputFileName = "${artifactName}.apk"
        }
        tasks.named("sign${variant.name.capitalize()}Bundle", FinalizeBundleTask) {
            File file = finalBundleFile.asFile.get()
            File finalFile = new File(file.parentFile, "${artifactName}.aab")
            finalBundleFile.set(finalFile)
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.activity:activity-ktx:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    // Billing
    implementation 'com.android.billingclient:billing-ktx:6.0.1'
    implementation 'ru.rustore.sdk:billingclient:3.0.0'
    // CameraX
    def camerax_version = '1.3.0'
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"
    // Coil
    implementation 'io.coil-kt:coil:2.2.2'
    // DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    // Flexbox
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.2.3')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // Kotlin CSV
    implementation 'com.github.doyaaaaaken:kotlin-csv-jvm:1.9.2'
    // Ml Kit
    implementation 'com.google.mlkit:barcode-scanning:17.2.0'
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Preference
    implementation 'androidx.preference:preference-ktx:1.2.1'
    // Room
    def room_version = '2.5.2'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    // Splash
    implementation 'androidx.core:core-splashscreen:1.0.1'
    // Zxing
    implementation 'com.google.zxing:core:3.5.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
